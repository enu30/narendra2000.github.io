{"version":3,"sources":["covid_gif.gif","Navbar.js","Contact.js","Notifications.js","footer.js","Hospital.js","medical.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Contact","state","loding","char","cont","notf","this","setState","loading","fetch","then","response","json","data","console","log","contacts","regional","primary","className","scope","map","index","loc","number","Component","Notifications","notifications","title","split","substr","href","link","FooterPage","sum","reg","summary","ruralHospitals","ruralBeds","urbanHospitals","urbanBeds","totalHospitals","totalBeds","med","medicalColleges","name","city","ownership","admissionCapacity","hospitalBeds","App","useState","t1","sett1","t2","sett2","t3","sett3","t4","sett4","t5","sett5","id","onClick","src","Logo","Hospital","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.cee49c05.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/covid_gif.95fb00c0.gif\";","import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.css';\n\nfunction Contact()\n{\n        return (\n\n            <div>\n            \n            </div>\n          )\n}\n\n \nexport default Contact;\n","import React,{ useState ,Component }from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './contact.css';\n// import ReactDOM from \"react-dom\";\n\nclass Contact extends Component\n{\n\n    constructor()\n    {\n        super()\n        this.state={\n            loding:false,\n            char:[],\n            cont:{},\n            notf:{},\n        }\n    }\n\n    componentDidMount(){\n        this.setState({loading:true})\n        fetch(\"https://api.rootnet.in/covid19-in/contacts\")\n        .then(response=>response.json())\n        .then(data=>{\n            console.log(data);\n            this.setState({\n            loading:false,char:data.data.contacts.regional,cont:data.data.contacts.primary})\n        console.log(\"abc\",this.state.cont);\n    })\n    }\n    // componentDidMount(){\n    //     this.setState({loading:true})\n    //     fetch(\"https://api.rootnet.in/covid19-in/notifications\")\n    //     .then(response=>response.json())\n    //     .then(data=>{\n    //         console.log(data);\n    //         this.setState({\n    //         loading:false,notf:data.data.notificationsy})\n    //     console.log(\"abc\",this.state.notf);\n    // })\n    // }\n    // const attr = this.state.char.map(data => <div>{data.loc}</div>)\n    //     const num = this.state.char.map(data => <div>{data.loc}</div>)\n    render(){\n        \n        return(\n            <div className=\"but\">\n            \n                <div className=\"container\">\n                    <div >\n                    <table className=\"table table-striped\" >\n                    <thead className=\"thead-dark\" >\n                    <tr>\n                        <th scope=\"col\">S.No</th>\n                        <th scope=\"col\">State</th>\n                        <th scope=\"col\">Contact</th>\n                    </tr>\n                    </thead>\n                <tbody >\n                {this.state.char.map((data,index) => (<tr>\n                    <th scope=\"row\">\n                        {index+1}\n                    </th>\n                    <td>\n                        {data.loc}\n                    </td>\n                    <td>\n                        {data.number}\n                    </td>\n                </tr>))}\n                \n                </tbody>\n              </table>\n                    </div>\n       \n                </div>\n            </div>\n          )\n    }\n        \n}\n\n \nexport default Contact;","import React,{ useState ,Component }from 'react';\nimport  \"./image.css\"\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\n\nclass Notifications extends Component\n{\n\n    constructor()\n    {\n        super()\n        this.state={\n            loding:false,\n            cont:{},\n            notf:[],\n        }\n    }\n\n    componentDidMount(){\n        this.setState({loading:true})\n        fetch(\"https://api.rootnet.in/covid19-in/notifications\")\n        .then(response=>response.json())\n        .then(data=>{\n            console.log(data);\n            this.setState({\n            loading:false,notf:data.data.notifications})\n        console.log(\"abc\",this.state.notf);\n    })\n    }\n    // const attr = this.state.char.map(data => <div>{data.loc}</div>)\n    //     const num = this.state.char.map(data => <div>{data.loc}</div>)\n    render(){\n        \n        return(\n            <div className=\"but\">\n            \n            <div className=\"container\">\n           \n            <table className=\"table table-striped\">\n            <thead className=\"thead-dark\">\n            <tr>\n                <th scope=\"col\">Date</th>\n                <th scope=\"col\">Notification</th>\n                <th scope=\"col\">Title</th>\n            </tr>\n        </thead>\n        <tbody>\n        \n        {this.state.notf.map((data,index) => (\n       \n            \n            <tr>\n            \n            <th scope=\"row\">\n            {(data.title).split(\" \",1)}\n            </th>\n            <td>\n                {(data.title).substr(10)}\n                \n            </td>\n            <td>\n                <a href={data.link}>{data.link}</a>\n            </td>\n        </tr>))}\n        \n        </tbody>\n      </table>\n           \n      </div>\n            </div>\n          )\n    }\n        \n}\n\n \nexport default Notifications;","\nimport React from \"react\";\nimport 'bootstrap/dist/css/bootstrap.css';\n// import { MDBCol, MDBContainer, MDBRow, MDBFooter } from \"mdbreact\";\n\nconst FooterPage = () => {\n    const dark={\n        background:\"black\",\n        color:\"white\"\n    }\n  return (\n    <div>\n    <div className=\"container\">\n    <footer>\n    <table className=\"table\">\n    <thead className=\"thead-dark\">\n    <tr>\n        <th scope=\"col\">Number</th>\n        <th scope=\"col\">Toll Free Number</th>\n        <th scope=\"col\">Email</th>\n        <th scope=\"col\">Social</th>\n    </tr>\n    </thead>\n<tbody >\n        <tr className=\"dark\">\n            <td>+91-11-23978046</td>\n            <td>1075</td>\n            <td>ncov2019@gov.in</td>\n            <td>Facebook-<a href=\"https://www.facebook.com/MoHFWIndia\">https://www.facebook.com/MoHFWIndia</a><br></br>\n            Twitter- <a href=\"https://twitter.com/MoHFW_INDIA\">https://twitter.com/MoHFW_INDIA</a>\n            </td>\n            \n        </tr>\n\n</tbody>\n</table>\n    \n    </footer>\n    </div>\n        \n    </div>\n  );\n}\n\nexport default FooterPage;","import React,{ useState ,Component }from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './contact.css';\n// import ReactDOM from \"react-dom\";\n\nclass Contact extends Component\n{\n\n    constructor()\n    {\n        super()\n        this.state={\n            loding:false,\n            sum:{},\n            reg:[],\n        }\n    }\n\n    componentDidMount(){\n        this.setState({loading:true})\n        fetch(\"https://api.rootnet.in/covid19-in/hospitals/beds\")\n        .then(response=>response.json())\n        .then(data=>{\n            console.log(data);\n            this.setState({\n            loading:false,sum:data.data.summary,reg:data.data.regional})\n        // console.log(\"abc\",this.state.cont);\n    })\n    }\n    // componentDidMount(){\n    //     this.setState({loading:true})\n    //     fetch(\"https://api.rootnet.in/covid19-in/notifications\")\n    //     .then(response=>response.json())\n    //     .then(data=>{\n    //         console.log(data);\n    //         this.setState({\n    //         loading:false,notf:data.data.notificationsy})\n    //     console.log(\"abc\",this.state.notf);\n    // })\n    // }\n    // const attr = this.state.char.map(data => <div>{data.loc}</div>)\n    //     const num = this.state.char.map(data => <div>{data.loc}</div>)\n    render(){\n        \n        return(\n            <div className=\"but\">\n\n            <div className=\"box2\">\n              <p className=\"total-customers\">Rural hospitals</p>\n              <br/>\n              {this.state.sum.ruralHospitals}\n            </div>\n            <div className=\"box2\">\n              <p className=\"total-customers\">Rural Beds</p>\n              <br/>\n              {this.state.sum.ruralBeds}\n            </div>\n            <div className=\"box2\">\n              <p className=\"total-customers\">Urban hospitals</p>\n              <br/>\n              {this.state.sum.urbanHospitals}\n            </div>\n            <div className=\"box2\">\n              <p className=\"total-customers\">Urban Beds</p>\n              <br/>\n              {this.state.sum.urbanBeds}\n            </div>\n            <div className=\"box2\">\n              <p className=\"total-customers\">Total Hospitals</p>\n              <br/>\n              {this.state.sum.totalHospitals}\n            </div>\n            <div className=\"box2\">\n              <p className=\"total-customers\">Total Beds</p>\n              <br/>\n              {this.state.sum.totalBeds}\n            </div>\n            \n            \n            <div className=\"container\">\n            \n            <table className=\"table table-striped\">\n            <thead className=\"thead-dark\">\n        \n\n            <tr>\n                <th scope=\"col\">S.No</th>\n                <th scope=\"col\">State Name</th>\n                <th scope=\"col\">Rural Hospitals</th>\n                <th scope=\"col\">Rural Beds</th>\n                <th scope=\"col\">Urban Hospitals</th>\n                <th scope=\"col\">Urban Beds</th>\n                <th scope=\"col\">Total Hospitals</th>\n                <th scope=\"col\">Total Beds(State Wise)</th>\n\n            </tr>\n        </thead>\n        <tbody>\n        {this.state.reg.map((data,index) => (<tr>\n            <th scope=\"row\">\n                {index+1}\n            </th>\n            <td>\n                {data.state}\n            </td>\n            <td>\n                {data.ruralHospitals}\n            </td>\n            <td>\n                {data.ruralBeds}\n            </td>\n            <td>\n                {data.urbanHospitals}\n            </td>\n            <td>\n                {data.urbanBeds}\n            </td>\n            <td>\n                {data.totalHospitals}\n            </td>\n            <td>\n                {data.totalBeds}\n            </td>\n        </tr>))}\n        \n        </tbody>\n      </table>\n           \n      </div>\n            </div>\n          )\n    }\n        \n}\n\n \nexport default Contact;","import React,{ useState ,Component }from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './contact.css';\n// import ReactDOM from \"react-dom\";\n\nclass Contact extends Component\n{\n\n    constructor()\n    {\n        super()\n        this.state={\n            loding:false,\n            med:[],\n        }\n    }\n\n    componentDidMount(){\n        this.setState({loading:true})\n        fetch(\"https://api.rootnet.in/covid19-in/hospitals/medical-colleges\")\n        .then(response=>response.json())\n        .then(data=>{\n            console.log(data);\n            this.setState({\n            loading:false,med:data.data.medicalColleges})\n        // console.log(\"abc\",this.state.cont);\n    })\n    }\n\n    // componentDidMount(){\n    //     this.setState({loading:true})\n    //     fetch(\"https://api.rootnet.in/covid19-in/notifications\")\n    //     .then(response=>response.json())\n    //     .then(data=>{\n    //         console.log(data);\n    //         this.setState({\n    //         loading:false,notf:data.data.notificationsy})\n    //     console.log(\"abc\",this.state.notf);\n    // })\n    // }\n    // const attr = this.state.char.map(data => <div>{data.loc}</div>)\n    //     const num = this.state.char.map(data => <div>{data.loc}</div>)\n    render(){\n        \n        return(\n            <div className=\"but\">\n            \n            <div className=\"container\">\n            \n            <table className=\"table table-striped\">\n            <thead className=\"thead-dark\">\n        \n\n            <tr>\n                <th scope=\"col\">S.No</th>\n                <th scope=\"col\">State</th>\n                <th scope=\"col\">Name</th>\n                <th scope=\"col\">City</th>\n                <th scope=\"col\">Ownership</th>\n                <th scope=\"col\">Admission Capacity</th>\n                <th scope=\"col\">Hospitals Beds</th>\n\n            </tr>\n        </thead>\n        <tbody>\n        {this.state.med.map((data,index) => (<tr>\n            <th scope=\"row\">\n                {index+1}\n            </th>\n            <td>\n                {data.state}\n            </td>\n            <td>\n                {data.name}\n            </td>\n            <td>\n                {data.city}\n            </td>\n            <td>\n                {data.ownership}\n            </td>\n            <td>\n                {data.admissionCapacity}\n            </td>\n            <td>\n                {data.hospitalBeds}\n            </td>\n            \n        </tr>))}\n        \n        </tbody>\n      </table>\n           \n      </div>\n            </div>\n          )\n    }\n        \n}\n\n \nexport default Contact;","import React,{useState} from 'react';\nimport './App.css';\n\nimport Navbar from './Navbar'\nimport Contact from \"./Contact\"\nimport  \"./image.css\"\nimport Notifications from \"./Notifications\"\nimport Footer from './footer'\nimport Hospitals from './Hospital'\nimport Medical from './medical'\nimport Logo from './covid_gif.gif'\n\nfunction App() {\n\n  const [show, setShow] = useState(false);\n  const [t1,sett1]=useState(false);\n  const [t2,sett2]=useState(false);\n  const [t3,sett3]=useState(false);\n  const [t4,sett4]=useState(false);\n  const [t5,sett5]=useState(true);\n\n  function ta1()\n  {\n    sett1(true);\n    sett2(false);\n    sett3(false);\n    sett4(false);\n    sett5(false);\n  }\n  function ta2()\n  {\n    sett1(false);\n    sett2(true);\n    sett3(false);\n    sett4(false);\n    sett5(false);\n  }\n  function ta3()\n  {\n    sett1(false);\n    sett2(false);\n    sett3(true);\n    sett4(false);\n    sett5(false);\n  }\n  function ta4()\n  {\n    sett1(false);\n    sett2(false);\n    sett3(false);\n    sett4(true);\n    sett5(false);\n  }\n  function ta0()\n  {\n    sett5(true);\n    sett1(false);\n    sett2(false);\n    sett3(false);\n    sett4(false);\n  }\n\n//   window.onscroll = function() {myFunction()};\n\n// // Get the navbar\n// var navbar = document.getElementById(\"navbar\");\n\n// // Get the offset position of the navbar\n// var sticky = navbar.offsetTop;\n\n// // Add the sticky class to the navbar when you reach its scroll position. Remove \"sticky\" when you leave the scroll position\n// function myFunction() {\n//   if (window.pageYOffset >= sticky) {\n//     navbar.classList.add(\"sticky\")\n//   } else {\n//     navbar.classList.remove(\"sticky\");\n//   }\n// }\n  \n  \n  \n  return (\n    <div className=\"back\"  >\n        <div id=\"navbar\">\n          <a className=\"covid\" onClick={ta0}>COVID-19</a>\n        </div>\n        <div className=\"sidenav\">\n        <a className=\"navbar-brand\" href=\"#\">Analysis</a>\n\n        <a className=\"nav-link\" onClick={ta1}>Contact & Helpline Information <span className=\"sr-only\">(current)</span></a>\n  \n        <a className=\"nav-link\" onClick={ta2}>Notifications & advisories</a>\n   \n        <a className=\"nav-link\" onClick={ta3}>Medical Colleges & Beds</a>\n      \n        <a className=\"nav-link \" onClick={ta4}>Hospitals & Beds</a>\n        </div>\n        {t5&&<div >\n          <img src={Logo}></img>\n        </div>}\n\n        <div className=\"main\">\n          {t1&&<Contact />}\n          {t2&&<Notifications />}\n          {t3&&<Medical />}\n          {t4&&<Hospitals />}\n          <Footer />\n        </div>\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}